# -*- coding: utf-8 -*-
##############################################################################
#
#    Copyright (c) 2021 Cloudroits (info.cloudroits@gmail.com)
#    You can modify it under the terms of the GNU LESSER
#    GENERAL PUBLIC LICENSE (LGPL v3), Version 3.
#
#    It is forbidden to publish, distribute, sublicense, or sell copies
#    of the Software or modified copies of the Software.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU LESSER GENERAL PUBLIC LICENSE (LGPL v3) for more details.
#
#    You should have received a copy of the GNU LESSER GENERAL PUBLIC LICENSE
#    GENERAL PUBLIC LICENSE (LGPL v3) along with this program.
#    If not, see <http://www.gnu.org/licenses/>.
#
##############################################################################

from odoo import api, fields, models

#Display amount in words in Sale order
class AccountMove(models.Model):

    _inherit = 'account.move'

    def _compute_amount2words(self):
        for rec in self:
                rec.amount_words = str(rec.currency_id.amount_to_text(rec.amount_total))
                rec.total_tax_amount_in_words = str(rec.currency_id.amount_to_text(rec.amount_tax))

    total_tax_amount_in_words = fields.Char(
        compute='_compute_amount2words', string='Total Tax Amount (In Words)')
    amount_words = fields.Char(string="Total amount in words: ", help=
        "Total amount in words is automatically generated by the system", compute='_compute_amount2words')

    def get_hsn_code(self, hsn):
        list1 = []
        for invoice_line in self.invoice_line_ids:
            list1.append(invoice_line.product_id.l10n_in_hsn_code)
        hsn_group = list(set(list1))
        return hsn_group

    # Get Rate and Amount fot GST product
    def get_gst(self, inv_id, product_id):
        invoice = self.search([('id', '=', inv_id)], limit=1)
        tax_amount = 0
        rate = 0
        for num in invoice.invoice_line_ids:
            if num.product_id.id == product_id:
                tax_rate = 0
                for i in num.tax_ids:
                    if i.children_tax_ids:
                        tax_rate = sum(i.children_tax_ids.mapped('amount'))
                tax_amount = ((tax_rate / 100) * num.price_subtotal) / 2
                rate = tax_rate / 2
        return [rate, tax_amount]

    # Get Rate and Amount fot IGST product
    def get_igst(self, inv_id, product_id):
        invoice = self.search([('id', '=', inv_id)], limit=1)
        tax_amount = 0
        rate = 0
        for i in invoice.invoice_line_ids:
            if i.product_id.id == product_id:
                tax_rate = 0
                for t in i.tax_ids:
                    if not t.children_tax_ids:
                        tax_rate = t.amount
                tax_amount = (tax_rate / 100) * i.price_subtotal
                rate = tax_rate
        return [rate, tax_amount]
